name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # adjust your Python version
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest  # or install from your requirements.txt if you have one
      
      - name: Run lint
        run: flake8 starter/backend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # adjust
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest  # or requirements.txt if exists
      
      - name: Run tests
        run: pytest starter/backend/tests  # adjust to your test folder

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker image
        working-directory: starter/backend
        env:
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY: your-docker-registry-url
          IMAGE_NAME: your-backend-image-name
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
          echo "Docker image built: $REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
          
      # Optional: Push the image to registry
      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: your-docker-registry-url
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          # Update the image tag in your Kubernetes deployment manifest
          sed -i "s|image: your-docker-registry-url/your-backend-image-name:.*|image: your-docker-registry-url/your-backend-image-name:${{ github.sha }}|" ./k8s/deployment.yaml
          kubectl apply -f ./k8s/
