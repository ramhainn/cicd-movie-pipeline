name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'    
  workflow_dispatch:            # Allow manual trigger

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
  ECR_REPOSITORY: backend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies (pipenv)
        working-directory: starter/backend
        run: pipenv install --deploy --ignore-pipfile
      - name: Run flake8 lint
        working-directory: starter/backend
        run: pipenv run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies (pipenv)
        working-directory: starter/backend
        run: pipenv install --deploy --ignore-pipfile
      - name: Run tests
        working-directory: starter/backend
        run: pipenv run pytest tests

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG starter/backend

      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update Kubernetes manifest image tag and deploy
        run: |
          IMAGE_TAG=${{ github.sha }}
          # Replace image tag in your manifest(s)
          sed -i "s|image: .*|image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG|g" ./k8s/backend-deployment.yaml
          kubectl apply -f ./k8s/backend-deployment.yaml

      - name: Verify deployment rollout
        run: kubectl rollout status deployment/backend-deployment
